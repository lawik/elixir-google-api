# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1SchemaPredictionResult do
  @moduledoc """
  Represents a line of JSONL in the batch prediction output file.

  ## Attributes

  *   `error` (*type:* `GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1SchemaPredictionResultError.t`, *default:* `nil`) - The error result. Do not set prediction if this is set.
  *   `instance` (*type:* `map()`, *default:* `nil`) - User's input instance. Struct is used here instead of Any so that JsonFormat does not append an extra "@type" field when we convert the proto to JSON.
  *   `key` (*type:* `String.t`, *default:* `nil`) - Optional user-provided key from the input instance.
  *   `prediction` (*type:* `any()`, *default:* `nil`) - The prediction result. Value is used here instead of Any so that JsonFormat does not append an extra "@type" field when we convert the proto to JSON and so we can represent array of objects. Do not set error if this is set.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :error =>
            GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1SchemaPredictionResultError.t()
            | nil,
          :instance => map() | nil,
          :key => String.t() | nil,
          :prediction => any() | nil
        }

  field(:error,
    as: GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1SchemaPredictionResultError
  )

  field(:instance, type: :map)
  field(:key)
  field(:prediction)
end

defimpl Poison.Decoder,
  for: GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1SchemaPredictionResult do
  def decode(value, options) do
    GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1SchemaPredictionResult.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1SchemaPredictionResult do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
