# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig do
  @moduledoc """
  The config for Prediction data drift detection.

  ## Attributes

  *   `attributionScoreDriftThresholds` (*type:* `%{optional(String.t) => GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1ThresholdConfig.t}`, *default:* `nil`) - Key is the feature name and value is the threshold. The threshold here is against attribution score distance between different time windows.
  *   `defaultDriftThreshold` (*type:* `GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1ThresholdConfig.t`, *default:* `nil`) - Drift anomaly detection threshold used by all features. When the per-feature thresholds are not set, this field can be used to specify a threshold for all features.
  *   `driftThresholds` (*type:* `%{optional(String.t) => GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1ThresholdConfig.t}`, *default:* `nil`) - Key is the feature name and value is the threshold. If a feature needs to be monitored for drift, a value threshold must be configured for that feature. The threshold here is against feature distribution distance between different time windws.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :attributionScoreDriftThresholds =>
            %{
              optional(String.t()) =>
                GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1ThresholdConfig.t()
            }
            | nil,
          :defaultDriftThreshold =>
            GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1ThresholdConfig.t() | nil,
          :driftThresholds =>
            %{
              optional(String.t()) =>
                GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1ThresholdConfig.t()
            }
            | nil
        }

  field(:attributionScoreDriftThresholds,
    as: GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1ThresholdConfig,
    type: :map
  )

  field(:defaultDriftThreshold,
    as: GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1ThresholdConfig
  )

  field(:driftThresholds,
    as: GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1ThresholdConfig,
    type: :map
  )
end

defimpl Poison.Decoder,
  for:
    GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig do
  def decode(value, options) do
    GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for:
    GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
