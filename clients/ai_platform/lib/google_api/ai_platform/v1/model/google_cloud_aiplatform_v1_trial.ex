# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1Trial do
  @moduledoc """
  A message representing a Trial. A Trial contains a unique set of Parameters that has been or will be evaluated, along with the objective metrics got by running the Trial.

  ## Attributes

  *   `clientId` (*type:* `String.t`, *default:* `nil`) - Output only. The identifier of the client that originally requested this Trial. Each client is identified by a unique client_id. When a client asks for a suggestion, Vertex AI Vizier will assign it a Trial. The client should evaluate the Trial, complete it, and report back to Vertex AI Vizier. If suggestion is asked again by same client_id before the Trial is completed, the same Trial will be returned. Multiple clients with different client_ids can ask for suggestions simultaneously, each of them will get their own Trial.
  *   `customJob` (*type:* `String.t`, *default:* `nil`) - Output only. The CustomJob name linked to the Trial. It's set for a HyperparameterTuningJob's Trial.
  *   `endTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. Time when the Trial's status changed to `SUCCEEDED` or `INFEASIBLE`.
  *   `finalMeasurement` (*type:* `GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1Measurement.t`, *default:* `nil`) - Output only. The final measurement containing the objective value.
  *   `id` (*type:* `String.t`, *default:* `nil`) - Output only. The identifier of the Trial assigned by the service.
  *   `infeasibleReason` (*type:* `String.t`, *default:* `nil`) - Output only. A human readable string describing why the Trial is infeasible. This is set only if Trial state is `INFEASIBLE`.
  *   `measurements` (*type:* `list(GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1Measurement.t)`, *default:* `nil`) - Output only. A list of measurements that are strictly lexicographically ordered by their induced tuples (steps, elapsed_duration). These are used for early stopping computations.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Output only. Resource name of the Trial assigned by the service.
  *   `parameters` (*type:* `list(GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1TrialParameter.t)`, *default:* `nil`) - Output only. The parameters of the Trial.
  *   `startTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. Time when the Trial was started.
  *   `state` (*type:* `String.t`, *default:* `nil`) - Output only. The detailed state of the Trial.
  *   `webAccessUris` (*type:* `map()`, *default:* `nil`) - Output only. URIs for accessing [interactive shells](https://cloud.google.com/vertex-ai/docs/training/monitor-debug-interactive-shell) (one URI for each training node). Only available if this trial is part of a HyperparameterTuningJob and the job's trial_job_spec.enable_web_access field is `true`. The keys are names of each node used for the trial; for example, `workerpool0-0` for the primary node, `workerpool1-0` for the first node in the second worker pool, and `workerpool1-1` for the second node in the second worker pool. The values are the URIs for each node's interactive shell.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :clientId => String.t() | nil,
          :customJob => String.t() | nil,
          :endTime => DateTime.t() | nil,
          :finalMeasurement =>
            GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1Measurement.t() | nil,
          :id => String.t() | nil,
          :infeasibleReason => String.t() | nil,
          :measurements =>
            list(GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1Measurement.t()) | nil,
          :name => String.t() | nil,
          :parameters =>
            list(GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1TrialParameter.t()) | nil,
          :startTime => DateTime.t() | nil,
          :state => String.t() | nil,
          :webAccessUris => map() | nil
        }

  field(:clientId)
  field(:customJob)
  field(:endTime, as: DateTime)
  field(:finalMeasurement, as: GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1Measurement)
  field(:id)
  field(:infeasibleReason)

  field(:measurements,
    as: GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1Measurement,
    type: :list
  )

  field(:name)

  field(:parameters,
    as: GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1TrialParameter,
    type: :list
  )

  field(:startTime, as: DateTime)
  field(:state)
  field(:webAccessUris, type: :map)
end

defimpl Poison.Decoder, for: GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1Trial do
  def decode(value, options) do
    GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1Trial.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1Trial do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
