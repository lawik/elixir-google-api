# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1ExportDataConfig do
  @moduledoc """
  Describes what part of the Dataset is to be exported, the destination of the export and how to export.

  ## Attributes

  *   `annotationsFilter` (*type:* `String.t`, *default:* `nil`) - An expression for filtering what part of the Dataset is to be exported. Only Annotations that match this filter will be exported. The filter syntax is the same as in ListAnnotations.
  *   `fractionSplit` (*type:* `GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1ExportFractionSplit.t`, *default:* `nil`) - Split based on fractions defining the size of each set.
  *   `gcsDestination` (*type:* `GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1GcsDestination.t`, *default:* `nil`) - The Google Cloud Storage location where the output is to be written to. In the given directory a new directory will be created with name: `export-data--` where timestamp is in YYYY-MM-DDThh:mm:ss.sssZ ISO-8601 format. All export output will be written into that directory. Inside that directory, annotations with the same schema will be grouped into sub directories which are named with the corresponding annotations' schema title. Inside these sub directories, a schema.yaml will be created to describe the output format.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :annotationsFilter => String.t() | nil,
          :fractionSplit =>
            GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1ExportFractionSplit.t() | nil,
          :gcsDestination =>
            GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1GcsDestination.t() | nil
        }

  field(:annotationsFilter)

  field(:fractionSplit,
    as: GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1ExportFractionSplit
  )

  field(:gcsDestination, as: GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1GcsDestination)
end

defimpl Poison.Decoder, for: GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1ExportDataConfig do
  def decode(value, options) do
    GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1ExportDataConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1ExportDataConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
