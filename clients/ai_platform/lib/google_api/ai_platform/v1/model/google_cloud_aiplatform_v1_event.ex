# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1Event do
  @moduledoc """
  An edge describing the relationship between an Artifact and an Execution in a lineage graph.

  ## Attributes

  *   `artifact` (*type:* `String.t`, *default:* `nil`) - Required. The relative resource name of the Artifact in the Event.
  *   `eventTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. Time the Event occurred.
  *   `execution` (*type:* `String.t`, *default:* `nil`) - Output only. The relative resource name of the Execution in the Event.
  *   `labels` (*type:* `map()`, *default:* `nil`) - The labels with user-defined metadata to annotate Events. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Event (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
  *   `type` (*type:* `String.t`, *default:* `nil`) - Required. The type of the Event.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :artifact => String.t() | nil,
          :eventTime => DateTime.t() | nil,
          :execution => String.t() | nil,
          :labels => map() | nil,
          :type => String.t() | nil
        }

  field(:artifact)
  field(:eventTime, as: DateTime)
  field(:execution)
  field(:labels, type: :map)
  field(:type)
end

defimpl Poison.Decoder, for: GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1Event do
  def decode(value, options) do
    GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1Event.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1Event do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
