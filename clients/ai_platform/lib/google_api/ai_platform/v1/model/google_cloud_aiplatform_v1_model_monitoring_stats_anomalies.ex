# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1ModelMonitoringStatsAnomalies do
  @moduledoc """
  Statistics and anomalies generated by Model Monitoring.

  ## Attributes

  *   `anomalyCount` (*type:* `integer()`, *default:* `nil`) - Number of anomalies within all stats.
  *   `deployedModelId` (*type:* `String.t`, *default:* `nil`) - Deployed Model ID.
  *   `featureStats` (*type:* `list(GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1ModelMonitoringStatsAnomaliesFeatureHistoricStatsAnomalies.t)`, *default:* `nil`) - A list of historical Stats and Anomalies generated for all Features.
  *   `objective` (*type:* `String.t`, *default:* `nil`) - Model Monitoring Objective those stats and anomalies belonging to.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :anomalyCount => integer() | nil,
          :deployedModelId => String.t() | nil,
          :featureStats =>
            list(
              GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1ModelMonitoringStatsAnomaliesFeatureHistoricStatsAnomalies.t()
            )
            | nil,
          :objective => String.t() | nil
        }

  field(:anomalyCount)
  field(:deployedModelId)

  field(:featureStats,
    as:
      GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1ModelMonitoringStatsAnomaliesFeatureHistoricStatsAnomalies,
    type: :list
  )

  field(:objective)
end

defimpl Poison.Decoder,
  for: GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1ModelMonitoringStatsAnomalies do
  def decode(value, options) do
    GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1ModelMonitoringStatsAnomalies.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1ModelMonitoringStatsAnomalies do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
