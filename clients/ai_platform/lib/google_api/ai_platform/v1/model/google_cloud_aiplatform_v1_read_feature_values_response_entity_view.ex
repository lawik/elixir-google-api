# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1ReadFeatureValuesResponseEntityView do
  @moduledoc """
  Entity view with Feature values.

  ## Attributes

  *   `data` (*type:* `list(GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1ReadFeatureValuesResponseEntityViewData.t)`, *default:* `nil`) - Each piece of data holds the k requested values for one requested Feature. If no values for the requested Feature exist, the corresponding cell will be empty. This has the same size and is in the same order as the features from the header ReadFeatureValuesResponse.header.
  *   `entityId` (*type:* `String.t`, *default:* `nil`) - ID of the requested entity.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :data =>
            list(
              GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1ReadFeatureValuesResponseEntityViewData.t()
            )
            | nil,
          :entityId => String.t() | nil
        }

  field(:data,
    as:
      GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1ReadFeatureValuesResponseEntityViewData,
    type: :list
  )

  field(:entityId)
end

defimpl Poison.Decoder,
  for: GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1ReadFeatureValuesResponseEntityView do
  def decode(value, options) do
    GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1ReadFeatureValuesResponseEntityView.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1ReadFeatureValuesResponseEntityView do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
