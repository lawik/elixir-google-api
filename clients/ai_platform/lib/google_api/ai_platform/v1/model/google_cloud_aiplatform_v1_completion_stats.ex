# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1CompletionStats do
  @moduledoc """
  Success and error statistics of processing multiple entities (for example, DataItems or structured data rows) in batch.

  ## Attributes

  *   `failedCount` (*type:* `String.t`, *default:* `nil`) - Output only. The number of entities for which any error was encountered.
  *   `incompleteCount` (*type:* `String.t`, *default:* `nil`) - Output only. In cases when enough errors are encountered a job, pipeline, or operation may be failed as a whole. Below is the number of entities for which the processing had not been finished (either in successful or failed state). Set to -1 if the number is unknown (for example, the operation failed before the total entity number could be collected).
  *   `successfulCount` (*type:* `String.t`, *default:* `nil`) - Output only. The number of entities that had been processed successfully.
  *   `successfulForecastPointCount` (*type:* `String.t`, *default:* `nil`) - Output only. The number of the successful forecast points that are generated by the forecasting model. This is ONLY used by the forecasting batch prediction.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :failedCount => String.t() | nil,
          :incompleteCount => String.t() | nil,
          :successfulCount => String.t() | nil,
          :successfulForecastPointCount => String.t() | nil
        }

  field(:failedCount)
  field(:incompleteCount)
  field(:successfulCount)
  field(:successfulForecastPointCount)
end

defimpl Poison.Decoder, for: GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1CompletionStats do
  def decode(value, options) do
    GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1CompletionStats.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1CompletionStats do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
