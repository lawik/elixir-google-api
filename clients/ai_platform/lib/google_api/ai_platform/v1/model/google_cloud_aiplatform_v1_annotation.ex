# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1Annotation do
  @moduledoc """
  Used to assign specific AnnotationSpec to a particular area of a DataItem or the whole part of the DataItem.

  ## Attributes

  *   `annotationSource` (*type:* `GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1UserActionReference.t`, *default:* `nil`) - Output only. The source of the Annotation.
  *   `createTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. Timestamp when this Annotation was created.
  *   `etag` (*type:* `String.t`, *default:* `nil`) - Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
  *   `labels` (*type:* `map()`, *default:* `nil`) - Optional. The labels with user-defined metadata to organize your Annotations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Annotation(System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. Following system labels exist for each Annotation: * "aiplatform.googleapis.com/annotation_set_name": optional, name of the UI's annotation set this Annotation belongs to. If not set, the Annotation is not visible in the UI. * "aiplatform.googleapis.com/payload_schema": output only, its value is the payload_schema's title.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Output only. Resource name of the Annotation.
  *   `payload` (*type:* `any()`, *default:* `nil`) - Required. The schema of the payload can be found in payload_schema.
  *   `payloadSchemaUri` (*type:* `String.t`, *default:* `nil`) - Required. Google Cloud Storage URI points to a YAML file describing payload. The schema is defined as an [OpenAPI 3.0.2 Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/annotation/, note that the chosen schema must be consistent with the parent Dataset's metadata.
  *   `updateTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. Timestamp when this Annotation was last updated.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :annotationSource =>
            GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1UserActionReference.t() | nil,
          :createTime => DateTime.t() | nil,
          :etag => String.t() | nil,
          :labels => map() | nil,
          :name => String.t() | nil,
          :payload => any() | nil,
          :payloadSchemaUri => String.t() | nil,
          :updateTime => DateTime.t() | nil
        }

  field(:annotationSource,
    as: GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1UserActionReference
  )

  field(:createTime, as: DateTime)
  field(:etag)
  field(:labels, type: :map)
  field(:name)
  field(:payload)
  field(:payloadSchemaUri)
  field(:updateTime, as: DateTime)
end

defimpl Poison.Decoder, for: GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1Annotation do
  def decode(value, options) do
    GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1Annotation.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1Annotation do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
