# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata do
  @moduledoc """
  Metadata of the prediction output to be explained.

  ## Attributes

  *   `displayNameMappingKey` (*type:* `String.t`, *default:* `nil`) - Specify a field name in the prediction to look for the display name. Use this if the prediction contains the display names for the outputs. The display names in the prediction must have the same shape of the outputs, so that it can be located by Attribution.output_index for a specific output.
  *   `indexDisplayNameMapping` (*type:* `any()`, *default:* `nil`) - Static mapping between the index and display name. Use this if the outputs are a deterministic n-dimensional array, e.g. a list of scores of all the classes in a pre-defined order for a multi-classification Model. It's not feasible if the outputs are non-deterministic, e.g. the Model produces top-k classes or sort the outputs by their values. The shape of the value must be an n-dimensional array of strings. The number of dimensions must match that of the outputs to be explained. The Attribution.output_display_name is populated by locating in the mapping with Attribution.output_index.
  *   `outputTensorName` (*type:* `String.t`, *default:* `nil`) - Name of the output tensor. Required and is only applicable to Vertex AI provided images for Tensorflow.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :displayNameMappingKey => String.t() | nil,
          :indexDisplayNameMapping => any() | nil,
          :outputTensorName => String.t() | nil
        }

  field(:displayNameMappingKey)
  field(:indexDisplayNameMapping)
  field(:outputTensorName)
end

defimpl Poison.Decoder,
  for: GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata do
  def decode(value, options) do
    GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
