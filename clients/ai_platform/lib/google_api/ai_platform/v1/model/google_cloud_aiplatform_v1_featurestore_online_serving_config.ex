# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1FeaturestoreOnlineServingConfig do
  @moduledoc """
  OnlineServingConfig specifies the details for provisioning online serving resources.

  ## Attributes

  *   `fixedNodeCount` (*type:* `integer()`, *default:* `nil`) - The number of nodes for the online store. The number of nodes doesn't scale automatically, but you can manually update the number of nodes. If set to 0, the featurestore will not have an online store and cannot be used for online serving.
  *   `scaling` (*type:* `GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1FeaturestoreOnlineServingConfigScaling.t`, *default:* `nil`) - Online serving scaling configuration. Only one of `fixed_node_count` and `scaling` can be set. Setting one will reset the other.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :fixedNodeCount => integer() | nil,
          :scaling =>
            GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1FeaturestoreOnlineServingConfigScaling.t()
            | nil
        }

  field(:fixedNodeCount)

  field(:scaling,
    as:
      GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1FeaturestoreOnlineServingConfigScaling
  )
end

defimpl Poison.Decoder,
  for: GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1FeaturestoreOnlineServingConfig do
  def decode(value, options) do
    GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1FeaturestoreOnlineServingConfig.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.AiPlatform.V1.Model.GoogleCloudAiplatformV1FeaturestoreOnlineServingConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
